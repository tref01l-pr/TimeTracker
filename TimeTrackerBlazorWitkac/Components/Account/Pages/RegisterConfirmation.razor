@page "/Account/RegisterConfirmation"

<PageTitle>Potwierdzenie rejestracji</PageTitle>

<h1>Potwierdzenie rejestracji</h1>

<StatusMessage Message="@statusMessage" />

@if (emailConfirmationLink is not null)
{
    <p>
        Ta aplikacja nie ma obecnie zarejestrowanego prawdziwego nadawcy wiadomości e-mail, zobacz 
        <a href="https://aka.ms/aspaccountconf">te dokumenty</a>, aby dowiedzieć się, jak skonfigurować prawdziwego 
        nadawcę wiadomości e-mail. Zwykle jest to wiadomość e-mail: 
        <a href="@emailConfirmationLink">Kliknij tutaj, aby potwierdzić swoje konto</a>
    </p>
}
else
{
    <p>Sprawdź pocztę e-mail, aby potwierdzić swoje konto.</p>
}

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Błąd wyszukiwania użytkownika dla nieokreślonego adresu e-mail";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}
